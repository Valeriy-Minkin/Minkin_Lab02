//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Minkin_Lab02.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Minkin_Lab02.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на config.xml.
        /// </summary>
        public static string ConfigFileName {
            get {
                return ResourceManager.GetString("ConfigFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error! Cant copy file!.
        /// </summary>
        public static string CopyFileError {
            get {
                return ResourceManager.GetString("CopyFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error! Cant create folder!.
        /// </summary>
        public static string CreateFolderError {
            get {
                return ResourceManager.GetString("CreateFolderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error! Cant delete file!.
        /// </summary>
        public static string DeleteFileError {
            get {
                return ResourceManager.GetString("DeleteFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на backupedFiles.
        /// </summary>
        public static string FolderForBackup {
            get {
                return ResourceManager.GetString("FolderForBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на backup.
        /// </summary>
        public static string FolderForLogs {
            get {
                return ResourceManager.GetString("FolderForLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на data.
        /// </summary>
        public static string FolderForMonitorableData {
            get {
                return ResourceManager.GetString("FolderForMonitorableData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Press any key to exit.
        /// </summary>
        public static string PressAnyKey {
            get {
                return ResourceManager.GetString("PressAnyKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error! Cant read config!.
        /// </summary>
        public static string ReadConfigError {
            get {
                return ResourceManager.GetString("ReadConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error! Cant read log!.
        /// </summary>
        public static string ReadLogError {
            get {
                return ResourceManager.GetString("ReadLogError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset folder condition. Enter date and time (for example DD/MM/YYYY HH:MM:SS) or empty string, if you want return current condition:.
        /// </summary>
        public static string ResetText {
            get {
                return ResourceManager.GetString("ResetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select mode:{0}   1:Watch {0}   2:Reset.
        /// </summary>
        public static string SelectModeText {
            get {
                return ResourceManager.GetString("SelectModeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на *.txt.
        /// </summary>
        public static string TxtMask {
            get {
                return ResourceManager.GetString("TxtMask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error! Cant write config!.
        /// </summary>
        public static string WriteConfigError {
            get {
                return ResourceManager.GetString("WriteConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error! Cant write log!.
        /// </summary>
        public static string WriteLogError {
            get {
                return ResourceManager.GetString("WriteLogError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}Wrong mode!.
        /// </summary>
        public static string WrongMode {
            get {
                return ResourceManager.GetString("WrongMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .xml.
        /// </summary>
        public static string XmlMask {
            get {
                return ResourceManager.GetString("XmlMask", resourceCulture);
            }
        }
    }
}
